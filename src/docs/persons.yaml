paths:
  /persons:
    get:
      tags:
        - Persons
      summary: Get all the persons
      description: Return a list of persons
      responses:
        '200':
          description: List of persons
          schema:
            type: object
            properties:
              count:
                type: integer
              persons:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    lastName:
                      type: string
                    phone:
                      type: string
                    email:
                      type: string
                    status:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
        '500':
          description: Internal Server Error
    post:
      tags:
        - Persons
      summary: Post a person
      description: Receive a person to be created
      consumes:
        - application/json
      parameters:
        - in: body
          name: person
          description: The person to be created
          required: true
          schema:
            type: object
            required:
              - name
              - lastName
              - phone
              - email
              - status
            properties:
              name:
                type: string
              lastName:
                type: string
              phone:
                type: string
              email:
                type: string
              status:
                type: string
      responses:
        '201':
          description: Person created
          schema:
            type: object
            properties:
              message:
                type: string
                example: 'Person successfully saved!'
              createdPerson:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  lastName:
                    type: string
                  phone:
                    type: string
                  email:
                    type: string
                  status:
                    type: string
        '500':
          description: Internal Server Error
  /persons/{personId}:
    get:
      tags:
        - Persons
      summary: Get a person by id
      description: Return a single person
      parameters:
        - in: path
          name: personId
          description: Object id of the person to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Single person
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              lastName:
                type: string
              phone:
                type: string
              email:
                type: string
              status:
                type: string
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
        '404':
          description: Person not found
          schema:
            type: string
            example: Person not found!
        '500':
          description: Internal Server Error
    patch:
      tags:
        - Persons
      summary: Patch person specific fields by id
      description: Update specific fields of a single person
      parameters:
        - in: path
          name: personId
          description: Object id of the person to be updated
          required: true
          schema:
            type: string
        - in: body
          name: person
          description: The fields of person to be updated
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              lastName:
                type: string
              phone:
                type: string
              email:
                type: string
              status:
                type: string
      responses:
        '200':
          description: Person specific fields updation status
          schema:
            type: object
            properties:
              message:
                type: string
                example: Person successfully updated!
              status:
                type: object
                properties:
                  acknowledged:
                    type: boolean
                  modifiedCount:
                    type: integer
                  upsertedId:
                    type: string
                    nullable: true
                  upsertedCount:
                    type: integer
                  matchedCount:
                    type: integer
              updateFields:
                type: object
                properties:
                  name:
                    type: string
                  lastName:
                    type: string
                  phone:
                    type: string
                  email:
                    type: string
                  status:
                    type: string
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Persons
      summary: Delete a person by id
      description: Delete a single person
      parameters:
        - in: path
          name: personId
          description: Object id of the person to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Person deletion status
          schema:
            type: object
            properties:
              message:
                type: string
                example: Person successfully deleted!
              status:
                type: object
                properties:
                  acknowledged:
                    type: boolean
                  deletedCount:
                    type: integer
              addresses:
                type: object
                properties:
                  message:
                    type: string
                    example: Addresses related to person successfully deleted!
                  status:
                    type: object
                    properties:
                      acknowledged:
                        type: boolean
                      deletedCount:
                        type: integer
        '404':
          description: Person not found
          schema:
            type: string
            example: Person not found!
        '500':
          description: Internal Server Error